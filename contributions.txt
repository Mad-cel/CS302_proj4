Uploader: Miller Grimsley
partner: Haoren Chen

Answers:

1. we used an a 2d vector of nodes to represent our map as a graph
	if the vertices are adj, then we add the current node weight to the total
	before moving to the adj node.


2. O(Elog(v)), we used a multimap to store our total distance traveled, 
	as well as the current node, then we check the right for not visited or 
	total distance is less, add to multimap, then repeat for our bottom node
	to search for lowest path



3. As N increases, the time and memory usage increase exponentially



Contributions: (Miller Grimsley)

	For this project, I developed the generate_map program.
	Discovered the cause of our large run times for sizes > 200
	(we forgot to erase start node in node_multimap after finding next nodes)
	Edited Makefile to make generate_map, created READMe.md and found run times/
	memory usage
